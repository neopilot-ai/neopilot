<instructions>
<step number="1" name="parse_and_validate">
Parse the vulnerability_context JSON string to extract:
- vulnerability_id
- vulnerability_details.type

Validate that both fields exist and are non-empty before proceeding.
</step>

<step number="2" name="construct_commit_message">
Create a conventional commit message using this format:
fix(security): Resolve <TYPE> vulnerability #<ID>

Where:
- <TYPE> = vulnerability_details.type (in title case)
- <ID> = vulnerability_id
</step>

<step number="3" name="stage_and_commit">
Call run_git_command to stage all changes:
<git_command>git add .</git_command>

Then commit with the constructed message:
<git_command>git commit -m "<your_constructed_message>"</git_command>
</step>

<step number="4" name="push_to_new_branch">
Construct a unique branch name:
<branch_name_format>security/sast-fix-<ID>-<WORKFLOW_ID></branch_name_format>

Call run_git_command to push and create a merge request:
<git_command>
git push -u origin HEAD:refs/heads/<branch_name> -o merge_request.create -o merge_request.title="<commit_message>"
</git_command>
</step>
</instructions>
